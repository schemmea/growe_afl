<nextflow> ::= <shebang> <newline> <processes> <space> <workflow>

<shebang> ::= "#!/usr/bin/env nextflow"
<magicstring> ::= "382z9dfiusdpuzn5934magicstring9834n945zp9"
<processcallsplaceholder> ::= "spaceholder"
<processes> ::= <process> <newline> <process> | <processes> <newline> <process>
<workflow> ::= <workflowheader> <workflowbody>
<debug> ::= "debug true"
<process> ::= <processheader> <curlyopen> <newline> <space> <debug> <newline> <processbody> <newline> <curlyclose> <newline>
<processcall> ::= <identifier> <open> <close> <space>
<processcallpiped> ::= <processcall> <pipe> <processcall>
<processcalls> ::= <processcall> | <processcalls> <processcall> | <processcallpiped>
<processheader> ::= "process" <space> <identifier>
<processbody> ::=  <space> <input> <newline> <space> <output> <space> <script>
<input> ::= "input:" <newline> <inputvars> <newline>
<inputvars> ::= <inputvar> | <inputvars> <inputvar>
<inputvar> ::= <inputvartype> <space> <identifier> <newline>
<iotype> ::=  "val" | "path" | "each"  | "env" | "stdin" | "tuple"
<inputvartype> ::=  <iotype> | "each"
<output> ::= "output:" <newline> <outputvars> <newline>
<outputvars> ::= <outputvar> | <outputvars> <outputvar>
<outputvar> ::= <iotype> <space> <identifier> <newline>
<script> ::= "script:" <newline> <space> <space> <template> <space> <tick> <magicstring> <tick>
<template> ::= "template"
<workflowheader> ::= "workflow" <space>
<workflowbody> ::= <curlyopen> <newline> <space> <space> <channel> <pipe> <processcalls> <newline> <curlyclose>
<channel> ::= "Channel.of" <open> <channellist> <close>
<branchtotwo> ::= ".branch " <curlyopen> <newline> <branch> <defaultbranch> <space> <curlyclose>
<branch> ::= <space> <space> "one" <colon> <booleanexpression> <newline>
<defaultbranch> ::= <space> <space> "default" <colon> <true> <newline>

<channellist> ::= <channelitemquad> | <channellist> <comma> <channelitemquad>
<channelitem> ::= <number> | <quote> <identifier> <quote>
<channelitempair> ::= <channelitem> <comma> <channelitem>
<channelitemquad> ::= <channelitempair> <comma> <channelitempair>
<channelpairlist> ::= <channelpairitem> | <channelpairlist> <comma> <channelpairitem>
<channelpairitem> ::= <bracketopen> <channelitem> <comma> <channelitem> <bracketclose>
<booleanexpression> ::= <boolean> | "it" <booleanoperator> <channelitem>
<identifier> ::= <char> <char> | <identifier> <char>
<char> ::= a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z
<uint> ::= 1|2|3|4|5|6|7|8|9
<zero> ::= 0
<digit> ::= <zero> | <uint> | <uint><digit>
<boolean> ::= <true> | <false>
<true> ::= "true"
<false> ::= "false"
<booleanoperator> ::= "<" | ">" | "<=" | ">=" | "==" | "!="
<number> ::= <zero> | <uint> |  <uint> <number>
<space> ::= " "
<curlyopen> ::= "{"
<curlyclose> ::= "}"
<open> ::= "("
<close> ::= ")"
<bracketopen> ::= "["
<bracketclose> ::= "]"
<newline> ::= " \n "
<pipe> ::= " | "
<tick> ::= "'"
<comma> ::= ","
<quote> ::= '"'
<colon> ::= ":"